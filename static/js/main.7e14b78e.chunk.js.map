{"version":3,"sources":["components/Logo/index.tsx","screens/Home/index.tsx","components/Grid/index.tsx","screens/Play/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["index","className","Logo","to","value","rest","React","useState","whoToPlay","setWhoToPlay","winner","setWinner","aDraw","setDraw","Array","fill","board","setBoard","nextMove","setNextMove","userSelect","select","currentBoard","userWon","user","winningSpots","yuu","i","length","spot1","spot2","spot3","main","v","includes","parseInt","ind","indexOf","splice","m","whoWon","filter","useEffect","automated","setTimeout","onClick","map","element","Grid","App","path","Play","Home","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e14b78e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\n\r\nexport const index = () => {\r\n    return (\r\n        <>\r\n           <h1 className=\"animation animate-pulse delay-1000 transition-all ease-in-out font-black tracking-widest mr-2\">Tic </h1>\r\n                <h1 className=\"font-black tracking-widest\">Tac</h1>\r\n                <h1 className=\"font-black tracking-widest\">Toe</h1> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default index;\r\n","import React from 'react';\nimport { Link, RouteProps } from 'react-router-dom';\nimport Logo from '../../components/Logo'\n\n\n\nconst index = () => {\n  return (\n      <div className=\"w-full h-full flex flex-col justify-center items-center bg-purple-800\">\n            <div className=\"w-2/3 lg:w-1/2 flex flex-col items-center justify-center\">\n                <div className=\"flex flex-row items-center justify-center text-yellow-500 w-full text-7xl lg:text-8xl mb-20\">\n                <Logo />\n                </div>\n                <div className=\"flex flex-col\">\n                        <Link to=\"/play\" className=\"text-5xl no-underline text-yellow-600 hover:scale-110 duration-200 transform transition-all\">Play</Link>\n                </div>\n            </div>\n      </div>\n  )\n};\n\nexport default index;\n","import React from 'react'\r\n\r\n\r\ninterface Props extends React.HTMLAttributes<HTMLDivElement>{\r\n    value?: string;\r\n}\r\n\r\n\r\nexport const index = ({value, ...rest}:Props) => {\r\n    return (\r\n        <div  className=\"border-pink-500 text-8xl text-gray-50 border-2 flex flex-col justify-center items-center w-full h-full\" {...rest}>\r\n            {value? value == \"You\"? \"X\":\"O\":null}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default index;\r\n","import React, { ReactElement } from 'react';\nimport Logo from '../../components/Logo'\nimport Grid from '../../components/Grid'\nimport { Link } from 'react-router-dom';\n\n\nfunction index(): ReactElement {\n    const [whoToPlay, setWhoToPlay] = React.useState<\"You\" | \"Bot\">(\"You\");\n    const [winner, setWinner] = React.useState(null);\n    const [aDraw, setDraw] = React.useState(false);\n    const [board, setBoard] = React.useState(Array(9).fill(null));\n    const [nextMove, setNextMove] = React.useState<number>(0);\n\n    const whoWon = (currentBoard: any[], user:number) => {\n        const winningSpots = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6]\n        ];\n        let yuu = currentBoard;\n         for (let i = 0; i < winningSpots.length; i++) {\n            const  [spot1, spot2, spot3] = winningSpots[i];\n            const main = winningSpots[i];\n            if (currentBoard[spot1] && currentBoard[spot1] === currentBoard[spot2] && currentBoard[spot2] === currentBoard[spot3]) {\n                return currentBoard[spot1];\n            }\n            for(const v in currentBoard){\n                if(currentBoard[v]=== \"You\" && main.includes(parseInt(v))){\n                    const ind =  main.indexOf(parseInt(v))\n                    main.splice(ind, 1);\n                }\n            }\n           if(main.length < yuu.length){\n               if(main.length && !currentBoard[main[0]]){\n                yuu = main;\n               } \n           }\n        }\n        for(let m=0; m< yuu.length; m++){\n            if(!currentBoard[yuu[m]])setNextMove(yuu[m]);\n        }\n        return null;\n    }\n\n    const userSelect = (select: number) => {\n        const currentBoard = board;\n        if (currentBoard[select]) return;\n        currentBoard[select] = whoToPlay;\n        const userWon = whoWon(currentBoard, select);\n        if (!userWon) {\n            if(currentBoard.filter(i=>i===\"You\" || i === \"Bot\").length == 9){\n                return setDraw(true)\n            }\n        setWhoToPlay(whoToPlay === \"You\" ? \"Bot\" : \"You\");\n        // return automated()\n        } else {\n            setWinner(userWon)\n        }\n    }\n\n    React.useEffect(()=>{\n        if(whoToPlay == \"Bot\"){\n            automated();\n        }\n    }, [whoToPlay])\n\n\n    const reset = () => {\n        setBoard(Array(9).fill(null));\n        setWhoToPlay(whoToPlay === \"You\" ? \"Bot\" : \"You\");\n        setWinner(null)\n        setDraw(false)\n    }\n\n    const automated = ()=>{\n        setTimeout(()=>{\n            userSelect(nextMove);\n        }, 1500)\n    }\n\n\n    return (\n        <div className=\" bg-purple-900 w-full h-full flex flex-col lg:justify-center items-center relative\">\n            <Link to=\"/\" className=\"text-gray-50 text-6xl top-5 left-4 mt-10 lg:mt-0 lg:absolute no-underline\">Home</Link>\n            <div className=\"w-2/3 lg:w-1/2 my-10 flex flex-col items-center\">\n                <div className=\"text-7xl lg:text-8xl text-pink-600 flex flex-row\">\n                    <Logo />\n                </div>\n                <div className=\"flex flex-col text-2xl text-gray-50 font-bold my-4\">\n                    <h1> {whoToPlay ==\"You\"?\"Your turn\":\"Bot's turn\"} </h1>\n                    <button onClick={reset} className=\"py-2 my-4 px-6 text-2xl bg-pink-600 text-white shadow-lg rounded-md\">Reset</button>\n                </div>\n                {!winner && !aDraw && <div className=\"grid grid-cols-3 grid-rows-3  w-80 h-80\">\n                    {board.map((element, index: number) => {\n                        return <Grid  key={index} value={element} onClick={() => userSelect(index)} />\n                    })}\n                </div>}\n\n            </div>\n            <div className=\"w-2/3 lg:w-1/2 flex flex-col text-5xl lg:text-8xl align-center text-pink-600 items-center my-6  tracking-widest uppercase\">\n                {winner && <h1>{winner} win{winner === \"You\"?'':'s'}</h1>}\n                {aDraw && <h1>It&apos;s a tie</h1>}\n            </div>\n        </div>\n    )\n}\n\nexport default index;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Switch,\n  RouteComponentProps,\n} from 'react-router-dom';\nimport Home from './screens/Home';\nimport Play from './screens/Play';\n\nfunction App() {\n  return (\n    <div className=\"w-screen h-screen flex flex-col\">\n     <Router>\n     <Switch>\n        <Route path='/play'>\n          <Play />\n        </Route>\n        <Route path='/'>\n          <Home />\n        </Route>\n      </Switch>\n     </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}